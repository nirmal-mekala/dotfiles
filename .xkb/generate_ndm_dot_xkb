#!/usr/bin/env bash

EXTRA_NDM="+ndm_custom(hjkl_arrows)+ndm_custom(bracket_escape)+ndm_custom(swap_r_command)+ndm_custom(lctl_mode_switch)"
CAPSLOCK="+capslock(groupshift)"
OUTPUT_FILE="ndm.xkb"

# Accept input file or stdin
if [ -t 0 ] && [ -n "$1" ]; then
    INPUT="$1"
    exec < "$INPUT"
elif [ -t 0 ]; then
    echo "Usage: $0 [optional-xkb-file] < input.xkb"
    exit 1
fi

awk -v ndm="$EXTRA_NDM" -v cap="$CAPSLOCK" '
{
    if ($1 == "xkb_symbols") {
        line = $0

        # Find quote boundaries
        quote1 = index(line, "\"")
        if (quote1 == 0) { print line; next }

        remain = substr(line, quote1 + 1)
        quote2 = index(remain, "\"")
        if (quote2 == 0) { print line; next }

        # Extract include content
        inc = substr(remain, 1, quote2 - 1)

        # Remove existing capslock and ndm_custom
        gsub(/\+capslock\(groupshift\)/, "", inc)
        gsub(/\+ndm_custom\([^)]+\)/, "", inc)

        # Inject capslock + ndm_custom before inet(...) if present
        if (inc ~ /\+inet\([^)]*\)/) {
            sub(/\+inet\([^)]*\)/, cap ndm "&", inc)
        } else {
            inc = inc cap ndm
        }

        # Clean up any duplicated pluses
        gsub(/\+\++/, "+", inc)

        # Rebuild the line
        before = substr(line, 1, quote1 - 1)
        after = substr(remain, quote2 + 1)
        print before "\"" inc "\"" after
    } else {
        print
    }
}
' > "$OUTPUT_FILE"

echo "Written updated keymap to $OUTPUT_FILE"
